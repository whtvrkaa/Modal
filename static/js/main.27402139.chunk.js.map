{"version":3,"sources":["components/modal.jpg","components/Modal.js","globalStyle.js","App.js","index.js"],"names":["Background","styled","div","ModalWrapper","ModalImg","img","ModalContent","CloseModalButton","MdClose","Modal","showModal","setShowModal","modalRef","useRef","animation","useSpring","config","duration","opacity","transform","keyPress","useCallback","e","key","console","log","useEffect","document","addEventListener","removeEventListener","onClick","current","target","ref","style","src","modalUrl","alt","aria-label","prev","GlobalStyle","createGlobalStyle","Container","Button","button","App","useState","ReactDOM","render","StrictMode","getElementById"],"mappings":"6NAAe,MAA0B,kC,OCMnCA,EAAaC,IAAOC,IAAV,ycAaVC,EAAeF,IAAOC,IAAV,sQAaZE,EAAWH,IAAOI,IAAV,oHAORC,EAAeL,IAAOC,IAAV,oTAkBZK,EAAmBN,YAAOO,IAAPP,CAAH,qKAWTQ,EAAQ,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACzBC,EAAWC,mBAEXC,EAAYC,oBAAU,CACxBC,OAAQ,CACJC,SAAU,KAEdC,QAASR,EAAY,EAAI,EACzBS,UAAWT,EAAS,uCASlBU,EAAWC,uBACb,SAAAC,GACkB,WAAVA,EAAEC,KAAoBb,IACtBC,GAAa,GACba,QAAQC,IAAI,gBAGpB,CAACd,EAAcD,IAWnB,OARAgB,qBACI,WAEI,OADAC,SAASC,iBAAiB,UAAWR,GAC9B,kBAAMO,SAASE,oBAAoB,UAAWT,MAEzD,CAACA,IAID,mCACKV,EACG,cAACV,EAAD,CAAY8B,QA3BL,SAAAR,GACXV,EAASmB,UAAYT,EAAEU,QACvBrB,GAAa,IAyBwBsB,IAAKrB,EAAtC,SACI,cAAC,WAASV,IAAV,CAAcgC,MAAOpB,EAArB,SACI,eAACX,EAAD,CAAcO,UAAWA,EAAzB,UACI,cAACN,EAAD,CAAU+B,IAAKC,EAAUC,IAAI,WAC7B,eAAC/B,EAAD,WACI,gDACA,yEACA,iDAEJ,cAACC,EAAD,CACI+B,aAAW,cACXR,QAAS,kBAAMnB,GAAa,SAAA4B,GAAI,OAAKA,eAKrD,QCxHHC,EAAcC,YAAH,4ICIlBC,EAAYzC,IAAOC,IAAV,oHAOTyC,EAAS1C,IAAO2C,OAAV,gMA6BGC,MAlBf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACNpC,EADM,KACKC,EADL,KAOb,OACE,mCACE,eAAC+B,EAAD,WACE,cAACC,EAAD,CAAQb,QAPI,WAChBnB,GAAa,SAAA4B,GAAI,OAAKA,MAMlB,yBACA,cAAC,EAAD,CAAO7B,UAAWA,EAAWC,aAAcA,IAC3C,cAAC6B,EAAD,UC/BRO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,W","file":"static/js/main.27402139.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/modal.a16ad5d8.jpg\";","import React, { useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport modalUrl from './modal.jpg'\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  background: #0F2027;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to right, #2C5364, #203A43, #0F2027);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to right, #2C5364, #203A43, #0F2027); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 800px;\n  height: 500px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n\nconst ModalImg = styled.img`\n  width: 100%;\n  height: 83.5%;\n  border-radius: 10px 0 0 10px;\n  background: #000;\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n  p {\n    margin-bottom: 1rem;\n  }\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nexport const Modal = ({ showModal, setShowModal }) => {\n    const modalRef = useRef();\n\n    const animation = useSpring({\n        config: {\n            duration: 250\n        },\n        opacity: showModal ? 1 : 0,\n        transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n    });\n\n    const closeModal = e => {\n        if (modalRef.current === e.target) {\n            setShowModal(false);\n        }\n    };\n\n    const keyPress = useCallback(\n        e => {\n            if (e.key === 'Escape' && showModal) {\n                setShowModal(false);\n                console.log('I pressed');\n            }\n        },\n        [setShowModal, showModal]\n    );\n\n    useEffect(\n        () => {\n            document.addEventListener('keydown', keyPress);\n            return () => document.removeEventListener('keydown', keyPress);\n        },\n        [keyPress]\n    );\n\n    return (\n        <>\n            {showModal ? (\n                <Background onClick={closeModal} ref={modalRef}>\n                    <animated.div style={animation}>\n                        <ModalWrapper showModal={showModal}>\n                            <ModalImg src={modalUrl} alt='camera' />\n                            <ModalContent>\n                                <h1>Are you ready?</h1>\n                                <p>Get exclusive access to our next launch.</p>\n                                <button>Join Now</button>\n                            </ModalContent>\n                            <CloseModalButton\n                                aria-label='Close modal'\n                                onClick={() => setShowModal(prev => !prev)}\n                            />\n                        </ModalWrapper>\n                    </animated.div>\n                </Background>\n            ) : null}\n        </>\n    );\n};","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin:0;\n    padding: 0;\n    font-family: 'Arial', sans-serif;\n  }\n`;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Modal } from './components/Modal';\nimport { GlobalStyle } from './globalStyle';\n\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst Button = styled.button`\n  min-width: 100px;\n  padding: 16px 32px;\n  border-radius: 4px;\n  border: none;\n  background: #141414;\n  color: #fff;\n  font-size: 24px;\n  cursor: pointer;\n`;\n\nfunction App() {\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  return (\n    <>\n      <Container>\n        <Button onClick={openModal}>I'm a modal</Button>\n        <Modal showModal={showModal} setShowModal={setShowModal} />\n        <GlobalStyle />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}